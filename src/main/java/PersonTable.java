
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author srkan
 */
public class PersonTable extends javax.swing.JDialog {
    
    private Connection con = null;
    private Statement statement = null;
    private PreparedStatement preparedStatement = null;
    
    ProjectFunctions projectFunctions = new ProjectFunctions();
    DefaultTableModel model;

    /**
     * Creates new form PersonTable
     */
    public PersonTable(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
initComponents();
        model=(DefaultTableModel) personTable.getModel();
        showPersonTable();    
    }
    
    public void showPersonTable(){
        
        model.setRowCount(0);
        ArrayList<PersonModel> personList=new ArrayList<PersonModel>();
       
        personList = projectFunctions.getPersonTable();
        
        if(personList!=null){
            for(PersonModel x:personList){
                
                Object[] add = {x.getId(), x.getName(),x.getSurname(),x.getBookname(),x.getDate() };
                model.addRow(add);
            }
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        personTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameEtTable = new javax.swing.JTextField();
        surnameEtTable = new javax.swing.JTextField();
        booknameEtTable = new javax.swing.JTextField();
        searchStick = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        updateButtun = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        setMessageTable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(500, 250, 0, 0));
        setPreferredSize(new java.awt.Dimension(604, 400));

        personTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Primary Id", "Name", "Surname", "Bookname", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        personTable.setSelectionBackground(new java.awt.Color(255, 0, 0));
        personTable.setSelectionForeground(new java.awt.Color(51, 255, 0));
        personTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(personTable);
        if (personTable.getColumnModel().getColumnCount() > 0) {
            personTable.getColumnModel().getColumn(0).setResizable(false);
            personTable.getColumnModel().getColumn(1).setResizable(false);
            personTable.getColumnModel().getColumn(2).setResizable(false);
            personTable.getColumnModel().getColumn(3).setResizable(false);
            personTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setText("Name:");

        jLabel2.setText("Surname");

        jLabel3.setText("Bookname");

        jLabel4.setText("Search");

        nameEtTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameEtTableActionPerformed(evt);
            }
        });

        surnameEtTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameEtTableActionPerformed(evt);
            }
        });

        booknameEtTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booknameEtTableActionPerformed(evt);
            }
        });

        searchStick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStickActionPerformed(evt);
            }
        });
        searchStick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchStickKeyReleased(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButtun.setText("Update");
        updateButtun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtunActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.setToolTipText("");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        helpButton.setText("Help");

        setMessageTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        setMessageTable.setForeground(new java.awt.Color(255, 0, 0));
        setMessageTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchStick, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(nameEtTable))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(updateButtun, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(surnameEtTable)
                            .addComponent(booknameEtTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(setMessageTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surnameEtTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchStick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(booknameEtTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameEtTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(updateButtun)
                    .addComponent(deleteButton)
                    .addComponent(aboutButton)
                    .addComponent(helpButton))
                .addGap(9, 9, 9)
                .addComponent(setMessageTable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameEtTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameEtTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameEtTableActionPerformed

    private void surnameEtTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surnameEtTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_surnameEtTableActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        
        About a=new About(new javax.swing.JFrame(),true);
        a.setVisible(true);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void updateButtunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtunActionPerformed

        setMessageTable.setText("");
        
        String name= nameEtTable.getText();
        String surname= surnameEtTable.getText();
        String bookname= booknameEtTable.getText();
        
        int selecteddrow = personTable.getSelectedRow();
        
        if (selecteddrow == -1) {
            
            if (model.getRowCount() == 0) {
                setMessageTable.setText("Table is empty");
            }
            else {
                setMessageTable.setText("Choose the row which will update");
            }
        }
        
        else {
            int id = (int)model.getValueAt(selecteddrow,0);
            Date date= (Date) model.getValueAt(selecteddrow,4);
            
            projectFunctions.updatePerson(id,name,surname,bookname, (java.sql.Date) date);
            showPersonTable();
            setMessageTable.setText("Updated Successfully");
        }

    }//GEN-LAST:event_updateButtunActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        setMessageTable.setText("");
        
        String name= nameEtTable.getText();
        String surname= surnameEtTable.getText();
        String bookname= booknameEtTable.getText();
        
        projectFunctions.addToPersonTable(name,surname,bookname);
        showPersonTable();
        
        setMessageTable.setText("Added Successfully");
    }//GEN-LAST:event_addButtonActionPerformed

    private void searchStickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStickActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchStickActionPerformed

    private void booknameEtTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booknameEtTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_booknameEtTableActionPerformed

    private void searchStickKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchStickKeyReleased
        String search = searchStick.getText();
        searchDynamic(search);
    }//GEN-LAST:event_searchStickKeyReleased

    private void personTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personTableMouseClicked

        setMessageTable.setText("");

        int selectedrow = personTable.getSelectedRow();

        nameEtTable.setText(model.getValueAt(selectedrow,1).toString());
        surnameEtTable.setText(model.getValueAt(selectedrow,2).toString());
        booknameEtTable.setText(model.getValueAt(selectedrow,3).toString());
        Date date= (Date)model.getValueAt(selectedrow,4);;

        Date today=new Date();
        long extraction =(today.getTime()-date.getTime())/(1000*60*60*24);
        setMessageTable.setText(String.valueOf(extraction ));

        Long y= Long.valueOf(0);

        if(extraction >15){
            setMessageTable.setText("Time has been already passed "+ "<!-- "+extraction+" day -->" );
        }

        else{
            setMessageTable.setText("Time is not up");
        }

    }//GEN-LAST:event_personTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        setMessageTable.setText("");
        int selectedrow = personTable.getSelectedRow();
       
        if (selectedrow == -1) {
           if (model.getRowCount() == 0 ) {
               setMessageTable.setText("Person Table is empty");
           }
           else {
               setMessageTable.setText("Choose the row which will delete");
           }
      
       }
       else {
           int id = (int)model.getValueAt(selectedrow,0);
           
           projectFunctions.deleteFromPersonTable(id);
           showPersonTable();
           setMessageTable.setText("Deleted Successfully");
       
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    public void searchDynamic(String ara){
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        personTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(ara));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PersonTable dialog = new PersonTable(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField booknameEtTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameEtTable;
    private javax.swing.JTable personTable;
    private javax.swing.JTextField searchStick;
    private javax.swing.JLabel setMessageTable;
    private javax.swing.JTextField surnameEtTable;
    private javax.swing.JButton updateButtun;
    // End of variables declaration//GEN-END:variables
}
